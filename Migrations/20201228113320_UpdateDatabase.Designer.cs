// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rpg_Restapi.Data;

namespace Rpg_Restapi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201228113320_UpdateDatabase")]
    partial class UpdateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Rpg_Restapi.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Class")
                        .HasColumnType("integer");

                    b.Property<int>("Defeats")
                        .HasColumnType("integer");

                    b.Property<int>("Defense")
                        .HasColumnType("integer");

                    b.Property<int>("Fights")
                        .HasColumnType("integer");

                    b.Property<int>("HitPoints")
                        .HasColumnType("integer");

                    b.Property<int>("Intelligence")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Strength")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("Victories")
                        .HasColumnType("integer");

                    b.Property<Guid?>("WeaponUuid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WeaponUuid");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 1,
                            Defeats = 0,
                            Defense = 10,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 10,
                            Name = "Frodo",
                            Strength = 15,
                            UserId = 1,
                            Victories = 0
                        },
                        new
                        {
                            Id = 2,
                            Class = 2,
                            Defeats = 0,
                            Defense = 5,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 20,
                            Name = "Raistlin",
                            Strength = 5,
                            UserId = 2,
                            Victories = 0
                        });
                });

            modelBuilder.Entity("Rpg_Restapi.Models.CharacterSkill", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("CharacterSkills");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            SkillId = 2
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 1
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 3
                        });
                });

            modelBuilder.Entity("Rpg_Restapi.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 30,
                            Name = "Fireball"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 20,
                            Name = "Frenzy"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 50,
                            Name = "Blizzard"
                        });
                });

            modelBuilder.Entity("Rpg_Restapi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Player");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 53, 249, 119, 31, 10, 93, 77, 146, 65, 134, 27, 97, 133, 8, 250, 252, 13, 79, 85, 101, 252, 235, 93, 246, 71, 59, 26, 44, 221, 92, 17, 147, 142, 222, 171, 249, 138, 157, 175, 150, 74, 103, 14, 149, 206, 218, 89, 110, 65, 252, 124, 196, 188, 189, 121, 124, 77, 168, 31, 208, 74, 238, 134, 162 },
                            PasswordSalt = new byte[] { 123, 124, 171, 65, 255, 120, 178, 10, 11, 189, 30, 249, 191, 15, 78, 57, 220, 0, 230, 116, 91, 159, 144, 150, 33, 39, 55, 227, 185, 214, 171, 241, 29, 172, 228, 3, 168, 163, 37, 204, 138, 118, 188, 222, 82, 13, 213, 76, 167, 99, 70, 198, 181, 75, 202, 249, 238, 74, 157, 62, 71, 2, 246, 29, 24, 191, 95, 225, 105, 106, 120, 156, 140, 153, 57, 92, 211, 105, 201, 97, 76, 163, 233, 245, 32, 253, 176, 84, 22, 81, 225, 146, 172, 91, 95, 144, 11, 255, 213, 135, 37, 12, 132, 54, 188, 239, 206, 171, 160, 134, 104, 237, 71, 224, 190, 44, 166, 227, 94, 194, 148, 120, 121, 74, 224, 138, 195, 226 },
                            Role = "Player",
                            Username = "user1"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 53, 249, 119, 31, 10, 93, 77, 146, 65, 134, 27, 97, 133, 8, 250, 252, 13, 79, 85, 101, 252, 235, 93, 246, 71, 59, 26, 44, 221, 92, 17, 147, 142, 222, 171, 249, 138, 157, 175, 150, 74, 103, 14, 149, 206, 218, 89, 110, 65, 252, 124, 196, 188, 189, 121, 124, 77, 168, 31, 208, 74, 238, 134, 162 },
                            PasswordSalt = new byte[] { 123, 124, 171, 65, 255, 120, 178, 10, 11, 189, 30, 249, 191, 15, 78, 57, 220, 0, 230, 116, 91, 159, 144, 150, 33, 39, 55, 227, 185, 214, 171, 241, 29, 172, 228, 3, 168, 163, 37, 204, 138, 118, 188, 222, 82, 13, 213, 76, 167, 99, 70, 198, 181, 75, 202, 249, 238, 74, 157, 62, 71, 2, 246, 29, 24, 191, 95, 225, 105, 106, 120, 156, 140, 153, 57, 92, 211, 105, 201, 97, 76, 163, 233, 245, 32, 253, 176, 84, 22, 81, 225, 146, 172, 91, 95, 144, 11, 255, 213, 135, 37, 12, 132, 54, 188, 239, 206, 171, 160, 134, 104, 237, 71, 224, 190, 44, 166, 227, 94, 194, 148, 120, 121, 74, 224, 138, 195, 226 },
                            Role = "Player",
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("Rpg_Restapi.Models.Weapon", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Uuid");

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Uuid = new Guid("e1d0072e-104f-4a5d-9747-8ef374ab308c"),
                            Damage = 20,
                            Name = "The Master Sword"
                        },
                        new
                        {
                            Uuid = new Guid("0d876ed4-456f-405d-b31a-9f5dc61bba85"),
                            Damage = 5,
                            Name = "Crystal Wand"
                        });
                });

            modelBuilder.Entity("Rpg_Restapi.Models.Character", b =>
                {
                    b.HasOne("Rpg_Restapi.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rpg_Restapi.Models.Weapon", "Weapon")
                        .WithMany()
                        .HasForeignKey("WeaponUuid");
                });

            modelBuilder.Entity("Rpg_Restapi.Models.CharacterSkill", b =>
                {
                    b.HasOne("Rpg_Restapi.Models.Character", "Character")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rpg_Restapi.Models.Skill", "Skill")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
