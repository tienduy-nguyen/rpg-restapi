// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rpg_Restapi.Data;

namespace Rpg_Restapi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201228110755_UsingUuidWeapon")]
    partial class UsingUuidWeapon
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Rpg_Restapi.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Class")
                        .HasColumnType("integer");

                    b.Property<int>("Defeats")
                        .HasColumnType("integer");

                    b.Property<int>("Defense")
                        .HasColumnType("integer");

                    b.Property<int>("Fights")
                        .HasColumnType("integer");

                    b.Property<int>("HitPoints")
                        .HasColumnType("integer");

                    b.Property<int>("Intelligence")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Strength")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("Victories")
                        .HasColumnType("integer");

                    b.Property<Guid>("WeaponId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WeaponId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 1,
                            Defeats = 0,
                            Defense = 10,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 10,
                            Name = "Frodo",
                            Strength = 15,
                            UserId = 1,
                            Victories = 0,
                            WeaponId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            Class = 2,
                            Defeats = 0,
                            Defense = 5,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 20,
                            Name = "Raistlin",
                            Strength = 5,
                            UserId = 2,
                            Victories = 0,
                            WeaponId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Rpg_Restapi.Models.CharacterSkill", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("CharacterSkills");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            SkillId = 2
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 1
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 3
                        });
                });

            modelBuilder.Entity("Rpg_Restapi.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 30,
                            Name = "Fireball"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 20,
                            Name = "Frenzy"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 50,
                            Name = "Blizzard"
                        });
                });

            modelBuilder.Entity("Rpg_Restapi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Player");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 243, 228, 117, 194, 52, 218, 170, 27, 243, 50, 179, 239, 64, 114, 107, 85, 52, 3, 211, 39, 254, 167, 91, 212, 123, 126, 90, 205, 187, 194, 61, 75, 156, 131, 142, 76, 0, 106, 181, 144, 62, 202, 138, 69, 6, 112, 251, 129, 193, 130, 4, 136, 17, 7, 146, 83, 138, 175, 21, 217, 52, 111, 206, 181 },
                            PasswordSalt = new byte[] { 184, 215, 194, 39, 3, 114, 210, 118, 249, 252, 152, 98, 225, 34, 244, 61, 153, 22, 248, 33, 136, 253, 24, 250, 170, 235, 56, 228, 172, 185, 79, 160, 239, 57, 74, 255, 14, 116, 84, 127, 125, 7, 197, 197, 172, 12, 39, 116, 29, 126, 153, 48, 224, 230, 133, 82, 139, 220, 93, 243, 164, 123, 145, 93, 242, 87, 211, 48, 42, 173, 149, 50, 101, 1, 236, 102, 85, 27, 76, 96, 46, 63, 23, 176, 130, 124, 60, 137, 114, 132, 78, 131, 219, 3, 21, 12, 135, 176, 187, 208, 143, 203, 74, 192, 180, 155, 133, 217, 40, 194, 139, 223, 31, 84, 93, 76, 21, 48, 218, 81, 70, 64, 69, 126, 130, 27, 255, 193 },
                            Role = "Player",
                            Username = "user1"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 243, 228, 117, 194, 52, 218, 170, 27, 243, 50, 179, 239, 64, 114, 107, 85, 52, 3, 211, 39, 254, 167, 91, 212, 123, 126, 90, 205, 187, 194, 61, 75, 156, 131, 142, 76, 0, 106, 181, 144, 62, 202, 138, 69, 6, 112, 251, 129, 193, 130, 4, 136, 17, 7, 146, 83, 138, 175, 21, 217, 52, 111, 206, 181 },
                            PasswordSalt = new byte[] { 184, 215, 194, 39, 3, 114, 210, 118, 249, 252, 152, 98, 225, 34, 244, 61, 153, 22, 248, 33, 136, 253, 24, 250, 170, 235, 56, 228, 172, 185, 79, 160, 239, 57, 74, 255, 14, 116, 84, 127, 125, 7, 197, 197, 172, 12, 39, 116, 29, 126, 153, 48, 224, 230, 133, 82, 139, 220, 93, 243, 164, 123, 145, 93, 242, 87, 211, 48, 42, 173, 149, 50, 101, 1, 236, 102, 85, 27, 76, 96, 46, 63, 23, 176, 130, 124, 60, 137, 114, 132, 78, 131, 219, 3, 21, 12, 135, 176, 187, 208, 143, 203, 74, 192, 180, 155, 133, 217, 40, 194, 139, 223, 31, 84, 93, 76, 21, 48, 218, 81, 70, 64, 69, 126, 130, 27, 255, 193 },
                            Role = "Player",
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("Rpg_Restapi.Models.Weapon", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Uuid");

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Uuid = new Guid("64ea5ebb-e9b7-4d6a-9ca9-27b25bed2e46"),
                            Damage = 20,
                            Name = "The Master Sword"
                        },
                        new
                        {
                            Uuid = new Guid("ed7fb34b-da3a-437d-b53b-0eba6f8617c0"),
                            Damage = 5,
                            Name = "Crystal Wand"
                        });
                });

            modelBuilder.Entity("Rpg_Restapi.Models.Character", b =>
                {
                    b.HasOne("Rpg_Restapi.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rpg_Restapi.Models.Weapon", "Weapon")
                        .WithMany()
                        .HasForeignKey("WeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Rpg_Restapi.Models.CharacterSkill", b =>
                {
                    b.HasOne("Rpg_Restapi.Models.Character", "Character")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rpg_Restapi.Models.Skill", "Skill")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
