// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rpg_Restapi.Data;

namespace Rpg_Restapi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201228100500_FixWeapons")]
    partial class FixWeapons
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Rpg_Restapi.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Class")
                        .HasColumnType("integer");

                    b.Property<int>("Defeats")
                        .HasColumnType("integer");

                    b.Property<int>("Defense")
                        .HasColumnType("integer");

                    b.Property<int>("Fights")
                        .HasColumnType("integer");

                    b.Property<int>("HitPoints")
                        .HasColumnType("integer");

                    b.Property<int>("Intelligence")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Strength")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("Victories")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 1,
                            Defeats = 0,
                            Defense = 10,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 10,
                            Name = "Frodo",
                            Strength = 15,
                            UserId = 1,
                            Victories = 0
                        },
                        new
                        {
                            Id = 2,
                            Class = 2,
                            Defeats = 0,
                            Defense = 5,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 20,
                            Name = "Raistlin",
                            Strength = 5,
                            UserId = 2,
                            Victories = 0
                        });
                });

            modelBuilder.Entity("Rpg_Restapi.Models.CharacterSkill", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("CharacterSkills");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            SkillId = 2
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 1
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 3
                        });
                });

            modelBuilder.Entity("Rpg_Restapi.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 30,
                            Name = "Fireball"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 20,
                            Name = "Frenzy"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 50,
                            Name = "Blizzard"
                        });
                });

            modelBuilder.Entity("Rpg_Restapi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Player");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 53, 76, 51, 8, 188, 13, 52, 44, 250, 181, 127, 229, 58, 176, 108, 7, 9, 187, 170, 0, 209, 212, 32, 202, 147, 75, 41, 207, 54, 227, 191, 144, 149, 221, 37, 22, 119, 171, 33, 239, 198, 187, 230, 90, 73, 187, 225, 240, 218, 151, 127, 235, 108, 112, 246, 27, 94, 41, 95, 91, 111, 98, 116, 26 },
                            PasswordSalt = new byte[] { 66, 4, 92, 164, 84, 246, 237, 168, 73, 194, 253, 253, 208, 34, 223, 242, 230, 37, 3, 149, 146, 144, 231, 225, 45, 254, 23, 231, 121, 37, 81, 185, 116, 97, 134, 99, 118, 202, 204, 145, 197, 132, 149, 154, 160, 221, 34, 184, 120, 1, 201, 7, 120, 5, 109, 232, 48, 220, 77, 227, 17, 211, 221, 143, 135, 8, 84, 220, 41, 167, 205, 17, 219, 164, 7, 10, 121, 157, 51, 241, 181, 165, 60, 101, 191, 107, 255, 125, 203, 79, 140, 56, 17, 133, 37, 179, 21, 60, 29, 129, 179, 6, 52, 108, 178, 176, 31, 25, 120, 198, 99, 187, 21, 132, 207, 128, 182, 240, 165, 246, 35, 1, 183, 233, 21, 47, 244, 88 },
                            Role = "Player",
                            Username = "user1"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 53, 76, 51, 8, 188, 13, 52, 44, 250, 181, 127, 229, 58, 176, 108, 7, 9, 187, 170, 0, 209, 212, 32, 202, 147, 75, 41, 207, 54, 227, 191, 144, 149, 221, 37, 22, 119, 171, 33, 239, 198, 187, 230, 90, 73, 187, 225, 240, 218, 151, 127, 235, 108, 112, 246, 27, 94, 41, 95, 91, 111, 98, 116, 26 },
                            PasswordSalt = new byte[] { 66, 4, 92, 164, 84, 246, 237, 168, 73, 194, 253, 253, 208, 34, 223, 242, 230, 37, 3, 149, 146, 144, 231, 225, 45, 254, 23, 231, 121, 37, 81, 185, 116, 97, 134, 99, 118, 202, 204, 145, 197, 132, 149, 154, 160, 221, 34, 184, 120, 1, 201, 7, 120, 5, 109, 232, 48, 220, 77, 227, 17, 211, 221, 143, 135, 8, 84, 220, 41, 167, 205, 17, 219, 164, 7, 10, 121, 157, 51, 241, 181, 165, 60, 101, 191, 107, 255, 125, 203, 79, 140, 56, 17, 133, 37, 179, 21, 60, 29, 129, 179, 6, 52, 108, 178, 176, 31, 25, 120, 198, 99, 187, 21, 132, 207, 128, 182, 240, 165, 246, 35, 1, 183, 233, 21, 47, 244, 88 },
                            Role = "Player",
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("Rpg_Restapi.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = 1,
                            Damage = 20,
                            Name = "The Master Sword"
                        },
                        new
                        {
                            Id = 2,
                            CharacterId = 2,
                            Damage = 5,
                            Name = "Crystal Wand"
                        });
                });

            modelBuilder.Entity("Rpg_Restapi.Models.Character", b =>
                {
                    b.HasOne("Rpg_Restapi.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Rpg_Restapi.Models.CharacterSkill", b =>
                {
                    b.HasOne("Rpg_Restapi.Models.Character", "Character")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rpg_Restapi.Models.Skill", "Skill")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Rpg_Restapi.Models.Weapon", b =>
                {
                    b.HasOne("Rpg_Restapi.Models.Character", "Character")
                        .WithOne("Weapon")
                        .HasForeignKey("Rpg_Restapi.Models.Weapon", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
