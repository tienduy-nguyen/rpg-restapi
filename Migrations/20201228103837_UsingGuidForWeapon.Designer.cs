// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rpg_Restapi.Data;

namespace Rpg_Restapi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20201228103837_UsingGuidForWeapon")]
    partial class UsingGuidForWeapon
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Rpg_Restapi.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Class")
                        .HasColumnType("integer");

                    b.Property<int>("Defeats")
                        .HasColumnType("integer");

                    b.Property<int>("Defense")
                        .HasColumnType("integer");

                    b.Property<int>("Fights")
                        .HasColumnType("integer");

                    b.Property<int>("HitPoints")
                        .HasColumnType("integer");

                    b.Property<int>("Intelligence")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Strength")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("Victories")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 1,
                            Defeats = 0,
                            Defense = 10,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 10,
                            Name = "Frodo",
                            Strength = 15,
                            UserId = 1,
                            Victories = 0
                        },
                        new
                        {
                            Id = 2,
                            Class = 2,
                            Defeats = 0,
                            Defense = 5,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 20,
                            Name = "Raistlin",
                            Strength = 5,
                            UserId = 2,
                            Victories = 0
                        });
                });

            modelBuilder.Entity("Rpg_Restapi.Models.CharacterSkill", b =>
                {
                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer");

                    b.HasKey("CharacterId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("CharacterSkills");

                    b.HasData(
                        new
                        {
                            CharacterId = 1,
                            SkillId = 2
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 1
                        },
                        new
                        {
                            CharacterId = 2,
                            SkillId = 3
                        });
                });

            modelBuilder.Entity("Rpg_Restapi.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 30,
                            Name = "Fireball"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 20,
                            Name = "Frenzy"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 50,
                            Name = "Blizzard"
                        });
                });

            modelBuilder.Entity("Rpg_Restapi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("bytea");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Player");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 23, 45, 239, 179, 72, 177, 206, 100, 58, 99, 162, 212, 76, 150, 0, 251, 13, 90, 25, 208, 76, 35, 84, 55, 240, 130, 27, 171, 172, 15, 118, 157, 81, 153, 162, 102, 7, 35, 68, 57, 199, 88, 83, 125, 26, 45, 209, 44, 112, 172, 180, 211, 176, 32, 12, 73, 114, 55, 175, 28, 198, 61, 45, 212 },
                            PasswordSalt = new byte[] { 6, 219, 126, 79, 160, 141, 1, 68, 90, 43, 175, 160, 138, 233, 168, 201, 124, 183, 215, 126, 69, 85, 211, 44, 218, 255, 102, 85, 17, 85, 176, 140, 2, 219, 248, 69, 30, 6, 175, 151, 203, 9, 53, 213, 46, 131, 176, 80, 121, 76, 255, 25, 193, 54, 232, 184, 23, 201, 113, 166, 84, 112, 56, 68, 30, 181, 188, 222, 151, 37, 229, 246, 188, 81, 153, 188, 23, 204, 203, 42, 144, 6, 158, 103, 71, 209, 76, 156, 84, 170, 179, 71, 202, 71, 102, 29, 126, 148, 10, 131, 177, 183, 108, 253, 144, 187, 189, 176, 72, 220, 92, 108, 160, 26, 128, 229, 55, 110, 51, 228, 72, 74, 50, 22, 133, 245, 147, 132 },
                            Role = "Player",
                            Username = "user1"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 23, 45, 239, 179, 72, 177, 206, 100, 58, 99, 162, 212, 76, 150, 0, 251, 13, 90, 25, 208, 76, 35, 84, 55, 240, 130, 27, 171, 172, 15, 118, 157, 81, 153, 162, 102, 7, 35, 68, 57, 199, 88, 83, 125, 26, 45, 209, 44, 112, 172, 180, 211, 176, 32, 12, 73, 114, 55, 175, 28, 198, 61, 45, 212 },
                            PasswordSalt = new byte[] { 6, 219, 126, 79, 160, 141, 1, 68, 90, 43, 175, 160, 138, 233, 168, 201, 124, 183, 215, 126, 69, 85, 211, 44, 218, 255, 102, 85, 17, 85, 176, 140, 2, 219, 248, 69, 30, 6, 175, 151, 203, 9, 53, 213, 46, 131, 176, 80, 121, 76, 255, 25, 193, 54, 232, 184, 23, 201, 113, 166, 84, 112, 56, 68, 30, 181, 188, 222, 151, 37, 229, 246, 188, 81, 153, 188, 23, 204, 203, 42, 144, 6, 158, 103, 71, 209, 76, 156, 84, 170, 179, 71, 202, 71, 102, 29, 126, 148, 10, 131, 177, 183, 108, 253, 144, 187, 189, 176, 72, 220, 92, 108, 160, 26, 128, 229, 55, 110, 51, 228, 72, 74, 50, 22, 133, 245, 147, 132 },
                            Role = "Player",
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("Rpg_Restapi.Models.Weapon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CharacterId")
                        .HasColumnType("integer");

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("246bc21b-d579-4364-bc08-9a6ad8e03a73"),
                            CharacterId = 1,
                            Damage = 20,
                            Name = "The Master Sword"
                        },
                        new
                        {
                            Id = new Guid("6eaf3ce5-b80b-422a-9437-96b08ab8d469"),
                            CharacterId = 2,
                            Damage = 5,
                            Name = "Crystal Wand"
                        });
                });

            modelBuilder.Entity("Rpg_Restapi.Models.Character", b =>
                {
                    b.HasOne("Rpg_Restapi.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Rpg_Restapi.Models.CharacterSkill", b =>
                {
                    b.HasOne("Rpg_Restapi.Models.Character", "Character")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rpg_Restapi.Models.Skill", "Skill")
                        .WithMany("CharacterSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Rpg_Restapi.Models.Weapon", b =>
                {
                    b.HasOne("Rpg_Restapi.Models.Character", "Character")
                        .WithOne("Weapon")
                        .HasForeignKey("Rpg_Restapi.Models.Weapon", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
